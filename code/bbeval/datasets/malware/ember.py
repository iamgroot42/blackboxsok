import os
import ember

from bbeval.datasets.base import CustomDatasetWrapper
from bbeval.config import DatasetConfig


class _EmberWrapper(CustomDatasetWrapper):
    def __init__(self, data_config: DatasetConfig):
        """
            self.ds_train and self.ds_test should be set to
            datasets to be used to train and evaluate.
        """
        super().__init__(data_config)
        # If data does not exist, create
        files_wanted = ["X_train.dat", "y_train.dat", "X_test.dat", "y_test.dat"]
        if not all(map(lambda f: os.path.exists(f), files_wanted)):
            ember.create_vectorized_features(self.root, feature_version=self.feature_version)
        # Read data
        X_train, Y_train, X_test, Y_test = ember.read_vectorized_features(
            self.root, feature_version=self.feature_version)


class Ember182Wrapper(_EmberWrapper):
    def __init__(self, data_config: DatasetConfig):
        self.feature_version = 2
        super().__init__(data_config)

class Ember172Wrapper(_EmberWrapper):
    def __init__(self, data_config: DatasetConfig):
        self.feature_version = 2
        super().__init__(data_config)

class Ember171Wrapper(_EmberWrapper):
    def __init__(self, data_config: DatasetConfig):
        self.feature_version = 1
        super().__init__(data_config)
