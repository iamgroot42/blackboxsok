import os
import magic
from bbeval.datasets.malware.base import MalwareFilesDataset, MalwareDatasetWrapper
from bbeval.config import DatasetConfig


class BODMASWrapper(MalwareDatasetWrapper):
    def __init__(self, data_config: DatasetConfig):
        super().__init__(data_config, num_classes=2)
        self.root = "/p/blackboxsok/BODMAS/"
        armed_folder = os.path.join(self.root, "armed")
        all_files = os.listdir(armed_folder)
        # For now, use only first 25 (for putting in numbers)
        # Proper evaluation should have 100
        n_wanted = 100
        # Assume at least half of the files are valid (should be true?)
        all_files = all_files[:2 * n_wanted]
        all_files = list(filter(lambda path: "PE32" in magic.from_file(os.path.join(armed_folder, path)), all_files))
        all_files = list(map(lambda path: os.path.join(armed_folder, path), all_files))
        all_files = all_files[:n_wanted]

        # Load data
        self.ds_train = MalwareFilesDataset(all_files)
        self.ds_test = MalwareFilesDataset(all_files)
        self.ds_val = MalwareFilesDataset(all_files)
